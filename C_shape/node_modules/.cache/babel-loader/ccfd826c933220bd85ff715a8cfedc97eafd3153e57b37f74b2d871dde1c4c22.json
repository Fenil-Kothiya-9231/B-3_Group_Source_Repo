{"ast":null,"code":"var _jsxFileName = \"/home/fenil/git_Repos/net_test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./App.css\";\n\n// Box component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Box = _ref => {\n  let {\n    onClick,\n    isClicked\n  } = _ref;\n  const boxColor = isClicked ? 'green' : 'white';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `box ${boxColor}`,\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n\n// App component\n_c = Box;\nconst App = () => {\n  _s();\n  const [boxStates, setBoxStates] = useState(Array(7).fill(false));\n  const handleClick = index => {\n    const updatedBoxStates = [...boxStates];\n    updatedBoxStates[index] = !updatedBoxStates[index];\n    setBoxStates(updatedBoxStates);\n  };\n  const startReverseConversion = () => {\n    const delay = 500;\n    const reversedBoxStates = [...boxStates].reverse();\n    reversedBoxStates.forEach((state, index) => {\n      if (state) {\n        setTimeout(() => {\n          const updatedBoxStates = [...boxStates];\n          updatedBoxStates[boxStates.length - index - 1] = false;\n          setBoxStates(updatedBoxStates);\n        }, delay * (index + 1));\n      }\n    });\n  };\n  const allBoxesClicked = boxStates.every(state => state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [boxStates.map((isClicked, index) => /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => handleClick(index),\n      isClicked: isClicked\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), allBoxesClicked && startReverseConversion()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"E6P38kXYzHg/5xewIvQa/J8FjA8=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Box","_ref","onClick","isClicked","boxColor","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","boxStates","setBoxStates","Array","fill","handleClick","index","updatedBoxStates","startReverseConversion","delay","reversedBoxStates","reverse","forEach","state","setTimeout","length","allBoxesClicked","every","children","map","_c2","$RefreshReg$"],"sources":["/home/fenil/git_Repos/net_test/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./App.css\"\n\n// Box component\nconst Box = ({ onClick, isClicked }) => {\n  const boxColor = isClicked ? 'green' : 'white';\n  return <div className={`box ${boxColor}`} onClick={onClick}></div>;\n};\n\n// App component\nconst App = () => {\n  const [boxStates, setBoxStates] = useState(Array(7).fill(false));\n\n  const handleClick = (index) => {\n    const updatedBoxStates = [...boxStates];\n    updatedBoxStates[index] = !updatedBoxStates[index];\n    setBoxStates(updatedBoxStates);\n  };\n\n  const startReverseConversion = () => {\n    const delay = 500;\n    const reversedBoxStates = [...boxStates].reverse();\n\n    reversedBoxStates.forEach((state, index) => {\n      if (state) {\n        setTimeout(() => {\n          const updatedBoxStates = [...boxStates];\n          updatedBoxStates[boxStates.length - index - 1] = false;\n          setBoxStates(updatedBoxStates);\n        }, delay * (index + 1));\n      }\n    });\n  };\n\n  const allBoxesClicked = boxStates.every((state) => state);\n\n  return (\n    <div>\n      {boxStates.map((isClicked, index) => (\n        <Box\n          key={index}\n          onClick={() => handleClick(index)}\n          isClicked={isClicked}\n        />\n      ))}\n      {allBoxesClicked && startReverseConversion()}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGC,IAAA,IAA4B;EAAA,IAA3B;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACjC,MAAMG,QAAQ,GAAGD,SAAS,GAAG,OAAO,GAAG,OAAO;EAC9C,oBAAOJ,OAAA;IAAKM,SAAS,EAAG,OAAMD,QAAS,EAAE;IAACF,OAAO,EAAEA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpE,CAAC;;AAED;AAAAC,EAAA,GALMV,GAAG;AAMT,MAAMW,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAACkB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;EAEhE,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,gBAAgB,GAAG,CAAC,GAAGN,SAAS,CAAC;IACvCM,gBAAgB,CAACD,KAAK,CAAC,GAAG,CAACC,gBAAgB,CAACD,KAAK,CAAC;IAClDJ,YAAY,CAACK,gBAAgB,CAAC;EAChC,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,KAAK,GAAG,GAAG;IACjB,MAAMC,iBAAiB,GAAG,CAAC,GAAGT,SAAS,CAAC,CAACU,OAAO,CAAC,CAAC;IAElDD,iBAAiB,CAACE,OAAO,CAAC,CAACC,KAAK,EAAEP,KAAK,KAAK;MAC1C,IAAIO,KAAK,EAAE;QACTC,UAAU,CAAC,MAAM;UACf,MAAMP,gBAAgB,GAAG,CAAC,GAAGN,SAAS,CAAC;UACvCM,gBAAgB,CAACN,SAAS,CAACc,MAAM,GAAGT,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK;UACtDJ,YAAY,CAACK,gBAAgB,CAAC;QAChC,CAAC,EAAEE,KAAK,IAAIH,KAAK,GAAG,CAAC,CAAC,CAAC;MACzB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMU,eAAe,GAAGf,SAAS,CAACgB,KAAK,CAAEJ,KAAK,IAAKA,KAAK,CAAC;EAEzD,oBACE1B,OAAA;IAAA+B,QAAA,GACGjB,SAAS,CAACkB,GAAG,CAAC,CAAC5B,SAAS,EAAEe,KAAK,kBAC9BnB,OAAA,CAACC,GAAG;MAEFE,OAAO,EAAEA,CAAA,KAAMe,WAAW,CAACC,KAAK,CAAE;MAClCf,SAAS,EAAEA;IAAU,GAFhBe,KAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGX,CACF,CAAC,EACDmB,eAAe,IAAIR,sBAAsB,CAAC,CAAC;EAAA;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACG,EAAA,CAtCID,GAAG;AAAAqB,GAAA,GAAHrB,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}