{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/fenil/React_Pro/sorting_names&numbers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/home/fenil/React_Pro/sorting_names&numbers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _jsxFileName = \"/home/fenil/React_Pro/sorting_names&numbers/src/NamesArranged.jsx\",\n  _this = this;\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar NamesArranged = function NamesArranged(_ref) {\n  var names = _ref.names,\n    orderBy = _ref.orderBy,\n    order = _ref.order;\n  var sortNames = function sortNames() {\n    var sortedNames = _toConsumableArray(names);\n    switch (orderBy) {\n      case \"LENGTH\":\n        sortedNames.sort(function (a, b) {\n          if (order === \"ASC\") {\n            return a.length - b.length;\n          } else {\n            return b.length - a.length;\n          }\n        });\n        break;\n      case \"ALPHABETS\":\n        sortedNames.sort(function (a, b) {\n          if (order === \"ASC\") {\n            return a.localeCompare(b);\n          } else {\n            return b.localeCompare(a);\n          }\n        });\n        break;\n      case \"VOWELS_COUNT\":\n        sortedNames.sort(function (a, b) {\n          var countVowels = function countVowels(name) {\n            var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n            var count = 0;\n            var _iterator = _createForOfIteratorHelper(name.toLowerCase()),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var char = _step.value;\n                if (vowels.includes(char)) {\n                  count++;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n            return count;\n          };\n          if (order === \"ASC\") {\n            return countVowels(a) - countVowels(b);\n          } else {\n            return countVowels(b) - countVowels(a);\n          }\n        });\n        break;\n      default:\n        break;\n    }\n    return sortedNames;\n  };\n  var sortedNames = sortNames();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Names Arranged with Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedNames.map(function (name, index) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, _this);\n};\n_c = NamesArranged;\nexport default NamesArranged;\nvar _c;\n$RefreshReg$(_c, \"NamesArranged\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NamesArranged","_ref","names","orderBy","order","sortNames","sortedNames","_toConsumableArray","sort","a","b","length","localeCompare","countVowels","name","vowels","count","_iterator","_createForOfIteratorHelper","toLowerCase","_step","s","n","done","char","value","includes","err","e","f","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","map","index","_c","$RefreshReg$"],"sources":["/home/fenil/React_Pro/sorting_names&numbers/src/NamesArranged.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst NamesArranged = ({ names, orderBy, order }) => {\r\n  const sortNames = () => {\r\n    const sortedNames = [...names];\r\n\r\n    switch (orderBy) {\r\n      case \"LENGTH\":\r\n        sortedNames.sort((a, b) => {\r\n          if (order === \"ASC\") {\r\n            return a.length - b.length;\r\n          } else {\r\n            return b.length - a.length;\r\n          }\r\n        });\r\n        break;\r\n      case \"ALPHABETS\":\r\n        sortedNames.sort((a, b) => {\r\n          if (order === \"ASC\") {\r\n            return a.localeCompare(b);\r\n          } else {\r\n            return b.localeCompare(a);\r\n          }\r\n        });\r\n        break;\r\n      case \"VOWELS_COUNT\":\r\n        sortedNames.sort((a, b) => {\r\n          const countVowels = (name) => {\r\n            const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\r\n            let count = 0;\r\n            for (let char of name.toLowerCase()) {\r\n              if (vowels.includes(char)) {\r\n                count++;\r\n              }\r\n            }\r\n            return count;\r\n          };\r\n\r\n          if (order === \"ASC\") {\r\n            return countVowels(a) - countVowels(b);\r\n          } else {\r\n            return countVowels(b) - countVowels(a);\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return sortedNames;\r\n  };\r\n  const sortedNames = sortNames();\r\n\r\n  return (\r\n    <div>\r\n      <h2>Names Arranged with Order</h2>\r\n      <ul>\r\n        {sortedNames.map((name, index) => (\r\n          <li key={index}>{name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NamesArranged;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}